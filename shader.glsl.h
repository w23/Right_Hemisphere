/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_GLSL_H_
# define SHADER_GLSL_H_

const char *shader_glsl =
 "#define deltaAA 1./(3.*1080.)\n"
 "uniform vec2 R_;"
 "uniform float t,Fade,shift11,zoomshift,steps,greyscale,greyscale2,timeshift,shiftX,shiftY,zoomXY,red,skip,distort;"
 "vec3 v[16];"
 "float z;"
 "vec3 f(vec3 z,vec3 v)"
 "{"
   "vec3 s=sin(v),g=cos(v);"
   "return z*mat3(g.y,s.z*s.y,-s.y*g.z,-s.x*s.y,g.x*g.z+s.x*s.z*g.y,s.z*g.x-s.x*g.z*g.y,g.x*s.y,s.x*g.z-g.x*s.z*g.y,s.z*s.x+g.x*g.z*g.y);"
 "}"
 "vec3 f(float z,float s,float v)"
 "{"
   "return vec3(z*4.-2.,s*4.-2.,v*4.-2.);"
 "}"
 "float s(vec3 v,vec3 s)"
 "{"
   "vec3 y,g,e=vec3(.5,.5,.001);"
   "g=s;"
   "s.z=(s.z+z)*4.;"
   "y=v-s;"
   "y=f(y,(t+timeshift)/29.*g);"
   "g=max(y-e,-y-e);"
   "return max(max(g.x,g.y),g.z);"
 "}"
 "void main()"
 "{"
   "z=zoomshift+smoothstep(120.,180.,t+timeshift)*.6-smoothstep(240.,300.,t+timeshift);"
   "v[0]=f(.044677,.928527,.337524);"
   "v[1]=f(.520019,.026367,.486328);"
   "v[2]=f(.026125,.984497,.337249);"
   "v[3]=f(.635498,.42041,.41748);"
   "v[4]=f(.558349,.929687,.849609);"
   "v[5]=f(.840576,.539917,.436889);"
   "v[6]=f(.096557,.049438,.537475);"
   "v[7]=f(.439819,.906127,.853759);"
   "v[8]=f(.291748,.75415,.479736);"
   "v[9]=f(.572753,.774047,.402343);"
   "v[10]=f(.565551,.614624,.542602);"
   "v[11]=f(.279052,.261779,.26455);"
   "v[12]=f(.62207,.145751,.537809);"
   "v[13]=f(.846801,.8208,.397094);"
   "v[14]=f(.905029,.469421,.400512);"
   "v[15]=f(.725585,.835769,.054077);"
   "v[11]-=shift11/vec3(70.,110.,-180.);"
   "float y,g,i,e=.0001,r,x=deltaAA/2.;"
   "vec3 m,d=vec3(0.),Y,X,a,p,k,l,F=vec3(.5,.5,.001),c=vec3(0.,0.,0.),o=vec3(e,0.,0.),n=vec3(0.,e,0.),h=vec3(0.,0.,e);"
   "for(int u=0;u<3;u++)"
     "{"
       "r=deltaAA/2.;"
       "for(int R=0;R<3;R++)"
         "{"
           "vec2 A=(gl_FragCoord.xy/R_+vec2(r,x)+vec2(shiftX,shiftY))/vec2(1.,16./9.)*zoomXY;"
           "y=1.;"
           "m=normalize(vec3(A,1.));"
           "for(int b=0;b<5;b++)"
             "{"
               "if(b>=int(steps))"
                 "break;"
               "g=26.;"
               "for(int C=0;C<15;C++)"
                 "if(C!=int(skip))"
                   "Y=v[C],Y.z=(Y.z+z)*4.,g=min(g,length(m*y-Y)-.71);"
               "if(g<e)"
                 "break;"
               "y+=g;"
               "if(y>26.)"
                 "break;"
             "}"
           "if(y<26.)"
             "{"
               "if(mod(A.y,.08)<.04)"
                 "y-=distort;"
               "m*=y;"
               "g=26.;"
               "for(int C=0;C<15;C++)"
                 "{"
                   "Y=v[C];"
                   "k=Y;"
                   "p=Y;"
                   "Y.z=(Y.z+z)*4.;"
                   "a=m-Y;"
                   "a=f(a,(t+timeshift)/29.*p);"
                   "p=max(a-F,-a-F);"
                   "i=max(max(p.x,p.y),p.z);"
                   "if(i<g)"
                     "g=i,l=k;"
                 "}"
               "c=normalize(vec3(s(m+o,l)-s(m-o,l),s(m+n,l)-s(m-n,l),s(m+h,l)-s(m-h,l)));"
             "}"
           "Y=vec3(c.xy,vec3(1.-y/20.));"
           "Y.z+=Y.y/2.;"
           "Y.y=Y.y+Y.x;"
           "d+=clamp(Y,0.,1.);"
           "r+=deltaAA;"
         "}"
       "x+=deltaAA;"
     "}"
   "if(Y<26.)"
     "y*=Y,s=m(y),r=normalize(vec3(m(y+X,s)-m(y-X,s),m(y+l,s)-m(y-l,s),m(y+F,s)-m(y-F,s)));"
   "s=vec3(r.xy,vec3(1.-Y/20.));"
   "s.z+=s.y/2.;"
   "s.y=s.y+s.x;"
   "g+=clamp(s,0.,1.);"
   "x=vec3(g.x+g.z*greyscale2);"
   "g=(1.-greyscale)*g+x*greyscale;"
   "gl_FragColor=vec4(g*Fade,1.);"
 "}";

#endif // SHADER_GLSL_H_
