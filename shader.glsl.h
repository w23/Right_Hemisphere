/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_GLSL_H_
# define SHADER_GLSL_H_
# define VAR_T "s"

const char *shader_glsl =
 "#version 120\n"
 "float y,v,z,i,k,f,x,m,r,l,c,a,n;"
 "uniform float s;"
 "vec3 b[16];"
 "float e;"
 "vec3 p(vec3 s,vec3 i)"
 "{"
   "vec3 v=sin(i),m=cos(i);"
   "return s*mat3(m.y,v.z*v.y,-v.y*m.z,-v.x*v.y,m.x*m.z+v.x*v.z*m.y,v.z*m.x-v.x*m.z*m.y,m.x*v.y,v.x*m.z-m.x*v.z*m.y,v.z*v.x+m.x*m.z*m.y);"
 "}"
 "vec3 p(float i,float s,float x)"
 "{"
   "return vec3(i*4.-2.,s*4.-2.,x*4.-2.);"
 "}"
 "float t(vec3 v,vec3 i)"
 "{"
   "vec3 b,m,y=vec3(.5,.5,.001);"
   "m=i;"
   "i.z=(i.z+e)*4.;"
   "b=v-i;"
   "b=p(b,(s+x)/29.*m);"
   "m=max(b-y,-b-y);"
   "return max(max(m.x,m.y),m.z);"
 "}"
 "void main()"
 "{"
   "{"
		"float g=s,o=0.,u[10]=float[](0.000,3.967,0.033,0.467,0.533,3.000,127.700,17.267,318.033,9.000),h[10]=float[](0.000,0.300,0.312,-0.142,0.056,0.474,0.000,-1.000,1.000,-1.000);"
     "for(int d=0;d<10;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "y=o;"
   "}"
   "{"
		"float g=s,o=0.,u[8]=float[](0.000,3.000,9.000,0.033,11.967,0.033,5.967,90.000),h[8]=float[](300.000,0.000,-71.100,34.100,-20.000,-109.000,-47.231,78.462);"
     "for(int d=0;d<8;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "v=o;"
   "}"
   "{"
		"float g=s,o=0.,u[27]=float[](0.000,8.000,0.033,1.967,19.000,0.033,2.100,0.033,36.833,0.033,0.500,0.033,27.433,0.033,0.967,15.000,0.300,0.200,0.167,0.200,0.133,7.000,5.000,0.033,0.533,0.333,1.100),h[27]=float[](2.800,0.000,-0.100,0.100,0.000,-0.200,0.000,0.200,0.000,0.200,0.000,-0.200,0.000,4.498,-0.052,-4.246,2.791,-0.245,0.125,-0.100,0.025,-1.595,0.000,-0.400,0.350,-0.050,0.100);"
     "for(int d=0;d<27;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "z=o;"
   "}"
   "{"
		"float g=s,o=0.,u[17]=float[](0.000,16.000,0.033,3.967,0.033,47.967,0.033,0.500,0.033,2.800,0.033,0.633,0.033,23.933,0.033,23.967,0.033),h[17]=float[](3.000,0.000,1.000,0.000,-1.000,0.000,-1.000,0.000,1.000,0.000,-1.000,0.000,1.000,0.000,-2.000,0.000,1.000);"
     "for(int d=0;d<17;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "i=o;"
   "}"
   "{"
		"float g=s,o=0.,u[14]=float[](0.000,96.000,0.033,12.967,2.967,0.067,5.967,2.000,0.033,4.967,0.033,17.267,6.600,4.067),h[14]=float[](0.000,0.000,1.000,0.000,-0.100,0.100,0.000,-0.140,-0.360,-0.200,-0.300,0.000,0.433,0.267);"
     "for(int d=0;d<14;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "k=o;"
   "}"
   "{"
		"float g=s,o=0.,u[10]=float[](0.000,104.000,0.033,0.700,3.267,4.000,0.233,0.100,3.367,4.300),h[10]=float[](0.000,0.000,0.850,-0.420,-0.202,-0.019,0.199,0.591,0.000,-0.500);"
     "for(int d=0;d<10;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "f=o;"
   "}"
   "{"
		"float g=s,o=0.,u[15]=float[](0.000,12.000,0.033,3.967,0.033,3.967,0.033,3.967,1.000,55.033,0.033,7.933,0.033,7.967,0.033),h[15]=float[](86.000,0.000,78.000,0.000,-375.000,-10.000,385.000,0.000,-158.000,0.000,150.000,-6.000,-28.000,-4.000,-112.000);"
     "for(int d=0;d<15;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "x=o;"
   "}"
   "{"
		"float g=s,o=0.,u[16]=float[](0.000,8.000,0.033,3.967,0.033,3.933,0.033,0.033,3.967,0.033,60.000,0.033,7.933,0.033,7.967,0.033),h[16]=float[](-0.500,0.000,0.438,0.000,-0.308,0.000,0.000,-0.610,0.000,0.480,0.000,0.700,-0.200,-0.450,0.000,-0.050);"
     "for(int d=0;d<16;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "m=o;"
   "}"
   "{"
		"float g=s,o=0.,u[13]=float[](0.000,8.000,0.033,3.967,0.033,3.967,0.033,3.967,0.033,60.000,0.033,7.933,0.033),h[13]=float[](-0.500,0.000,-0.300,0.000,0.300,0.000,0.780,0.000,-0.780,0.000,0.100,0.000,-0.100);"
     "for(int d=0;d<13;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "r=o;"
   "}"
   "{"
		"float g=s,o=0.,u[24]=float[](0.000,8.000,0.033,3.967,0.033,0.967,3.000,0.033,3.967,0.033,3.967,0.033,6.967,3.000,46.033,0.033,7.933,0.033,7.967,0.033,23.967,0.033,24.967,7.967),h[24]=float[](1.400,0.000,-0.360,0.000,0.160,0.000,-0.082,-0.638,0.020,0.360,-0.010,0.350,0.000,0.000,1.180,-1.680,0.000,0.600,-0.150,0.250,0.000,0.250,0.550,-0.260);"
     "for(int d=0;d<24;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "l=o;"
   "}"
   "{"
		"float g=s,o=0.,u[24]=float[](0.000,29.000,2.133,0.033,2.867,0.033,0.100,0.133,0.700,3.000,30.000,0.033,0.533,0.033,0.900,10.533,0.033,9.933,0.033,0.233,1.733,33.000,0.033,1.967),h[24]=float[](0.000,0.000,1.000,-1.000,0.000,0.400,0.000,-0.200,-0.200,0.000,0.714,-0.454,0.340,-0.260,0.410,0.250,-1.000,0.000,0.250,-0.020,-0.230,0.000,0.618,-0.618);"
     "for(int d=0;d<24;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "c=o;"
   "}"
   "{"
		"float g=s,o=0.,u[10]=float[](0.000,28.000,0.033,0.467,0.033,0.500,0.033,42.333,0.600,0.033),h[10]=float[](15.000,0.000,-3.400,-2.600,-5.000,-4.000,15.000,0.000,-15.000,15.000);"
     "for(int d=0;d<10;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "a=o;"
   "}"
   "{"
		"float g=s,o=0.,u[20]=float[](0.000,52.000,0.033,0.400,0.033,0.500,0.400,14.633,0.033,0.533,0.033,1.200,1.200,0.033,0.333,0.033,0.600,0.033,0.067,0.433),h[20]=float[](0.000,0.000,0.350,-0.250,0.100,-0.150,-0.050,0.000,0.250,-0.150,0.100,-0.200,0.000,0.300,-0.200,0.200,0.700,-0.091,-0.709,-0.200);"
     "for(int d=0;d<20;++d)"
       "{"
         "if(g<u[d])"
           "{"
             "o+=h[d]*g/u[d];"
             "break;"
           "}"
         "o+=h[d];"
         "g-=u[d];"
       "}"
     "n=o;"
   "}"
   "e=z+smoothstep(120.,180.,s+x)*.6-smoothstep(240.,300.,s+x);"
   "b[0]=p(.044677,.928527,.337524);"
   "b[1]=p(.520019,.026367,.486328);"
   "b[2]=p(.026125,.984497,.337249);"
   "b[3]=p(.635498,.42041,.41748);"
   "b[4]=p(.558349,.929687,.849609);"
   "b[5]=p(.840576,.539917,.436889);"
   "b[6]=p(.096557,.049438,.537475);"
   "b[7]=p(.439819,.906127,.853759);"
   "b[8]=p(.291748,.75415,.479736);"
   "b[9]=p(.572753,.774047,.402343);"
   "b[10]=p(.565551,.614624,.542602);"
   "b[11]=p(.279052,.261779,.26455);"
   "b[12]=p(.62207,.145751,.537809);"
   "b[13]=p(.846801,.8208,.397094);"
   "b[14]=p(.905029,.469421,.400512);"
   "b[15]=p(.725585,.835769,.054077);"
   "b[11]-=v/vec3(70.,110.,-180.);"
   "float g,o,h,u=.0001,d,F=.00015;"
   "vec3 C,Z=vec3(0.),Y,X,W,V,U,T=vec3(.5,.5,.001),S=vec3(0.,0.,0.),R=vec3(u,0.,0.),Q=vec3(0.,u,0.),P=vec3(0.,0.,u);"
   "for(int O=0;O<3;O++)"
     "{"
       "d=.00015;"
       "for(int N=0;N<3;N++)"
         "{"
           "vec2 M=(gl_FragCoord.xy/vec2(1920.,1080.)+vec2(d,F)+vec2(m,r))/vec2(1.,16./9.)*l;"
           "g=1.;"
           "C=normalize(vec3(M,1.));"
           "for(int L=0;L<5;L++)"
             "{"
               "if(L>=int(i))"
                 "break;"
               "o=26.;"
               "for(int K=0;K<15;K++)"
                 "if(K!=int(a))"
                   "Y=b[K],Y.z=(Y.z+e)*4.,o=min(o,length(C*g-Y)-.71);"
               "if(o<u)"
                 "break;"
               "g+=o;"
               "if(g>26.)"
                 "break;"
             "}"
           "if(g<26.)"
             "{"
               "if(mod(M.y,.08)<.04)"
                 "g-=n;"
               "C*=g;"
               "o=26.;"
               "for(int K=0;K<15;K++)"
                 "{"
                   "Y=b[K];"
                   "V=Y;"
                   "W=Y;"
                   "Y.z=(Y.z+e)*4.;"
                   "X=C-Y;"
                   "X=p(X,(s+x)/29.*W);"
                   "W=max(X-T,-X-T);"
                   "h=max(max(W.x,W.y),W.z);"
                   "if(h<o)"
                     "o=h,U=V;"
                 "}"
               "S=normalize(vec3(t(C+R,U)-t(C-R,U),t(C+Q,U)-t(C-Q,U),t(C+P,U)-t(C-P,U)));"
             "}"
           "Y=vec3(S.xy,vec3(1.-g/20.));"
           "Y.z+=Y.y/2.;"
           "Y.y=Y.y+Y.x;"
           "Z+=clamp(Y,0.,1.);"
           "d+=.0003;"
         "}"
       "F+=.0003;"
     "}"
   "Z/=9.;"
   "Z=(1.-k)*Z+vec3(Z.x+Z.z*f)*k;"
   "Z.xz+=c*vec2(abs(S.y),Z.z/3.);"
   "gl_FragColor=vec4(Z*y,1.);"
 "}";

#endif // SHADER_GLSL_H_
