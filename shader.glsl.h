/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_GLSL_H_
# define SHADER_GLSL_H_

const char *shader_glsl =
 "uniform vec2 R_;"
 "uniform float t,Fade,shift11,zoomshift,steps,greyscale,greyscale2;"
 "vec3 v[16];"
 "float z;"
 "vec3 f(vec3 x,vec3 v)"
 "{"
   "vec3 z=sin(v),g=cos(v);"
   "return x*mat3(g.y,z.z*z.y,-z.y*g.z,-z.x*z.y,g.x*g.z+z.x*z.z*g.y,z.z*g.x-z.x*g.z*g.y,g.x*z.y,z.x*g.z-g.x*z.z*g.y,z.z*z.x+g.x*g.z*g.y);"
 "}"
 "vec3 f(float x,float z,float v)"
 "{"
   "return vec3(x*4.-2.,z*4.-2.,v*4.-2.);"
 "}"
 "float f(vec3 x)"
 "{"
   "vec3 g;"
   "float y=26.;"
   "for(int f=0;f<15;f++)"
     "g=v[f],g.z=(g.z+z)*4.,y=min(y,length(x-g)-.71);"
   "return y;"
 "}"
 "vec3 x(vec3 x)"
 "{"
   "vec3 y,g,i,s,e,r=vec3(.5,.5,.001);"
   "float b=26.,m;"
   "for(int u=0;u<15;u++)"
     "{"
       "g=v[u];"
       "s=g;"
       "i=g;"
       "g.z=(g.z+z)*4.;"
       "y=x-g;"
       "y=f(y,(t+6.)/29.*i);"
       "i=max(y-r,-y-r);"
       "m=max(max(i.x,i.y),i.z);"
       "if(m<b)"
         "b=m,e=s;"
     "}"
   "return e;"
 "}"
 "float x(vec3 v,vec3 g)"
 "{"
   "vec3 y,i,e=vec3(.5,.5,.001);"
   "i=g;"
   "g.z=(g.z+z)*4.;"
   "y=v-g;"
   "y=f(y,(t+6.)/29.*i);"
   "i=max(y-e,-y-e);"
   "return max(max(i.x,i.y),i.z);"
 "}"
 "void main()"
 "{"
   "z=zoomshift+smoothstep(120.,180.,t+6.)*.6-smoothstep(240.,300.,t+6.);"
   "v[0]=f(.044677,.928527,.337524);"
   "v[1]=f(.520019,.026367,.486328);"
   "v[2]=f(.026125,.984497,.337249);"
   "v[3]=f(.635498,.42041,.41748);"
   "v[4]=f(.558349,.929687,.849609);"
   "v[5]=f(.840576,.539917,.436889);"
   "v[6]=f(.096557,.049438,.537475);"
   "v[7]=f(.439819,.906127,.853759);"
   "v[8]=f(.291748,.75415,.479736);"
   "v[9]=f(.572753,.774047,.402343);"
   "v[10]=f(.565551,.614624,.542602);"
   "v[11]=f(.279052,.261779,.26455);"
   "v[12]=f(.62207,.145751,.537809);"
   "v[13]=f(.846801,.8208,.397094);"
   "v[14]=f(.905029,.469421,.400512);"
   "v[15]=f(.725585,.835769,.054077);"
   "v[11]-=shift11/vec3(70.,110.,-180.);"
   "vec3 y,g=vec3(0.),i,e;"
   "vec2 m=(gl_FragCoord.xy/R_-vec2(.5))/vec2(1.,16./9.)*1.4;"
   "y=normalize(vec3(m,1.));"
   "float s=1.,r,b=.0001;"
   "vec3 u=vec3(0.,0.,0.),l=vec3(b,0.,0.),F=vec3(0.,b,0.),c=vec3(0.,0.,b);"
   "for(int R=0;R<3;R++)"
     "{"
       "r=f(y*s);"
       "if(r<b)"
         "break;"
       "s+=r;"
       "if(s>26.)"
         "break;"
       "if(steps<2.)"
         "break;"
     "}"
   "if(s<26.)"
     "y*=s,i=x(y),u=normalize(vec3(x(y+l,i)-x(y-l,i),x(y+F,i)-x(y-F,i),x(y+c,i)-x(y-c,i)));"
   "i=vec3(u.xy,vec3(1.-s/20.));"
   "i.z+=i.y/2.;"
   "i.y=i.y+i.x;"
   "g+=clamp(i,0.,1.);"
   "e=vec3(g.x+g.z*greyscale2);"
   "g=(1.-greyscale)*g+e*greyscale;"
   "gl_FragColor=vec4(g*Fade,1.);"
 "}";

#endif // SHADER_GLSL_H_
